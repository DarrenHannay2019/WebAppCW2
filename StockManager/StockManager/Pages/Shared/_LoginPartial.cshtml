@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@if (SignInManager.IsSignedIn(User))
{ 

<form asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/Index", new { area = "" })" method="post" id="logoutForm" class="navbar-right">
    <ul class="nav navbar-nav navbar-left">
        <li><a asp-page="/Warehouses/Index">Warehouses</a></li>
        <li><a asp-page="/Shops/Index">Shops</a></li>
        <li><a asp-page="/Warehouses/Index">Suppliers</a></li>
        <li><a asp-page="/Warehouses/Index">Stock</a></li>
        <li><a asp-page="/Shops/Index">Purchase Orders</a></li>
        <li><a asp-page="/Warehouses/Index">Shop Delivery</a></li>
        <li><a asp-page="/Shops/Index">Settings</a></li>
        <li><a asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @UserManager.GetUserName(User)!</a></li>
        <li>
            <button type="submit" class="btn btn-link navbar-btn navbar-link">Logout</button>
        </li>
    </ul>
</form>
}
else
{
<ul class="nav navbar-nav navbar-left">
    <li><a asp-area="Identity" asp-page="/Account/Register">Register</a></li>
    <li><a asp-area="Identity" asp-page="/Account/Login">Login</a></li>
</ul>
}